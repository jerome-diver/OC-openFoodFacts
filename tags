!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/3fdf28bc/
ADMIN_CONNECTED	enumerator.py	/^    ADMIN_CONNECTED = 1$/;"	v	class:TypeConnection
ALL	enumerator.py	/^    ALL = 1$/;"	v	class:Widget
AUTHENTICATION	__main__.py	/^    AUTHENTICATION = Authentication(GENERAL_CONTROLLER)$/;"	v
AdminConnection	model/database.py	/^class AdminConnection(DatabaseConnection):$/;"	c
Authentication	controller/authentication.py	/^class Authentication(QObject):$/;"	c
CATEGORIES	enumerator.py	/^    CATEGORIES = 2$/;"	v	class:Widget
CHECKED	enumerator.py	/^    CHECKED = 1$/;"	v	class:Mode
CWD	settings.py	/^CWD = os.path.dirname(os.path.abspath(__file__))$/;"	v
CategoriesHelper	model/helpers/categories.py	/^class CategoriesHelper(MixinHelpers):$/;"	c
CategoriesModel	model/views/categories.py	/^class CategoriesModel(MixinModelsView, QStandardItemModel):$/;"	c
Controller	controller/control.py	/^class Controller(QObject):$/;"	c
DB_CONNECT_MODE	settings.py	/^DB_CONNECT_MODE = "TCP"$/;"	v
DB_HOSTNAME	settings.py	/^DB_HOSTNAME = "localhost"$/;"	v
DB_INIT_FILE	settings.py	/^DB_INIT_FILE = os.path.join(CWD, "assets\/sql\/request.sql")$/;"	v
DB_PORT	settings.py	/^DB_PORT = 3306$/;"	v
DB_SOCKET	settings.py	/^DB_SOCKET = os.path.join(MARIA_RUN_DIR, "mysqld.sock")$/;"	v
DEBUG_MODE	settings.py	/^DEBUG_MODE = True$/;"	v
DETAILS	enumerator.py	/^    DETAILS = 5$/;"	v	class:Widget
Database used	README.md	/^## Database used$/;"	s
DatabaseConnection	model/database.py	/^class DatabaseConnection(QObject):$/;"	c
DatabaseMode	controller/control_mode.py	/^class DatabaseMode(MixinControllers, QObject):$/;"	c
FOODS	enumerator.py	/^    FOODS = 3$/;"	v	class:Widget
FoodsHelper	model/helpers/foods.py	/^class FoodsHelper(MixinHelpers):$/;"	c
FoodsModel	model/views/foods.py	/^class FoodsModel(MixinModelsView, QStandardItemModel):$/;"	c
GENERAL_CONTROLLER	__main__.py	/^    GENERAL_CONTROLLER = Controller()$/;"	v
GRANT_USER	settings.py	/^GRANT_USER = os.getenv("MARIA_GRANT_OFF_USER")$/;"	v
GRANT_USER_PASSWD	settings.py	/^GRANT_USER_PASSWD = os.getenv("MARIA_GRANT_OFF_PASSWD")$/;"	v
How to install	README.md	/^## How to install$/;"	s
Langage used	README.md	/^## Langage used$/;"	s
Libraries dependancies	README.md	/^## Libraries dependancies$/;"	s
LoadCategories	controller/loader_threads.py	/^class LoadCategories(QThread):$/;"	c
LoadFoods	controller/loader_threads.py	/^class LoadFoods(QThread):$/;"	c
LoadProductDetails	controller/loader_threads.py	/^class LoadProductDetails(QRunnable):$/;"	c
LocalDatabase	model/modes.py	/^class LocalDatabase(MixinModels):$/;"	c
MARIA_RUN_DIR	settings.py	/^MARIA_RUN_DIR = os.path.dirname("\/run\/mysqld\/")$/;"	v
MainWindow	view/mainwindow.py	/^class MainWindow(QMainWindow, Ui_MainWindow):$/;"	c
Messenger	view/messenger.py	/^class Messenger(QObject):$/;"	c
MixinControllers	controller/mixin.py	/^class MixinControllers(QObject):$/;"	c
MixinHelpers	model/helpers/mixin.py	/^class MixinHelpers:$/;"	c
MixinModels	model/mixin.py	/^class MixinModels(QObject):$/;"	c
MixinModelsView	model/views/mixin.py	/^class MixinModelsView():$/;"	c
MixinSigns	view/mixin.py	/^class MixinSigns(QObject):$/;"	c
Mode	enumerator.py	/^class Mode(Enum):$/;"	c
NUTRISCORE_A	settings.py	/^NUTRISCORE_A = os.path.join(CWD, "assets\/images\/nutriscore A.png")$/;"	v
NUTRISCORE_B	settings.py	/^NUTRISCORE_B = os.path.join(CWD, "assets\/images\/nutriscore B.png")$/;"	v
NUTRISCORE_C	settings.py	/^NUTRISCORE_C = os.path.join(CWD, "assets\/images\/nutriscore C.png")$/;"	v
NUTRISCORE_D	settings.py	/^NUTRISCORE_D = os.path.join(CWD, "assets\/images\/nutriscore D.png")$/;"	v
NUTRISCORE_E	settings.py	/^NUTRISCORE_E = os.path.join(CWD, "assets\/images\/nutriscore E.png")$/;"	v
OC-openFoodFacts	README.md	/^# OC-openFoodFacts$/;"	c
OpenClassRooms Python Path	README.md	/^## OpenClassRooms Python Path$/;"	s
OpenFoodFacts	model/modes.py	/^class OpenFoodFacts(MixinModels):$/;"	c
OpenFoodFactsMode	controller/control_mode.py	/^class OpenFoodFactsMode(MixinControllers, QObject):$/;"	c
ProductDetailsModels	model/views/product_details.py	/^class ProductDetailsModels():$/;"	c
ProductDetailsSignals	controller/loader_threads.py	/^class ProductDetailsSignals(QObject):$/;"	c
QLabelClickable	assets/objects/qlabel_clickable.py	/^class QLabelClickable(QLabel):$/;"	c
REQUEST_PAGE_SIZE	settings.py	/^REQUEST_PAGE_SIZE = 20$/;"	v
RUN	README.md	/^## RUN$/;"	s
SELECTED_FOOD	enumerator.py	/^    SELECTED_FOOD = 2$/;"	v	class:Mode
SELECTED_SUBSTITUTE	enumerator.py	/^    SELECTED_SUBSTITUTE = 3$/;"	v	class:Mode
SUBSTITUTES	enumerator.py	/^    SUBSTITUTES = 4$/;"	v	class:Widget
SignIn	view/sign_in.py	/^class SignIn(QDialog, Ui_SignIn, MixinSigns):$/;"	c
SignUp	view/sign_up.py	/^class SignUp(QDialog, Ui_SignUp, MixinSigns):$/;"	c
SubstitutesHelper	model/helpers/substitutes.py	/^class SubstitutesHelper(MixinHelpers):$/;"	c
SubstitutesModel	model/views/substitutes.py	/^class SubstitutesModel(MixinModelsView, QStandardItemModel):$/;"	c
ThreadsController	controller/loader_threads.py	/^class ThreadsController(QObject):$/;"	c
Trello board	README.md	/^## Trello board$/;"	s
TypeConnection	enumerator.py	/^class TypeConnection(Enum):$/;"	c
USER_CONNECTED	enumerator.py	/^    USER_CONNECTED = 2$/;"	v	class:TypeConnection
USER_DISCONNECTED	enumerator.py	/^    USER_DISCONNECTED = 3$/;"	v	class:TypeConnection
Ui_MainWindow	ui/ui_mainwindow.py	/^class Ui_MainWindow(object):$/;"	c
Ui_SignIn	ui/ui_sign_in.py	/^class Ui_SignIn(object):$/;"	c
Ui_SignUp	ui/ui_sign_up.py	/^class Ui_SignUp(object):$/;"	c
UpdateCategories	controller/loader_threads.py	/^class UpdateCategories(QThread):$/;"	c
User	model/user.py	/^class User(QObject):$/;"	c
UserConnection	model/database.py	/^class UserConnection(DatabaseConnection):$/;"	c
Widget	enumerator.py	/^class Widget(Enum):$/;"	c
__del__	controller/loader_threads.py	/^    def __del__(self):$/;"	m	class:LoadCategories
__del__	controller/loader_threads.py	/^    def __del__(self):$/;"	m	class:LoadFoods
__del__	controller/loader_threads.py	/^    def __del__(self):$/;"	m	class:LoadProductDetails
__del__	controller/loader_threads.py	/^    def __del__(self):$/;"	m	class:UpdateCategories
__del__	controller/mixin.py	/^    def __del__(self):$/;"	m	class:MixinControllers
__init__	assets/objects/qlabel_clickable.py	/^    def __init__(self, parent=None):$/;"	m	class:QLabelClickable
__init__	controller/authentication.py	/^    def __init__(self):$/;"	m	class:Authentication
__init__	controller/control.py	/^    def __init__(self):$/;"	m	class:Controller
__init__	controller/control_mode.py	/^    def __init__(self, **kargs):$/;"	m	class:DatabaseMode
__init__	controller/control_mode.py	/^    def __init__(self, **kargs):$/;"	m	class:OpenFoodFactsMode
__init__	controller/loader_threads.py	/^    def __init__(self):$/;"	m	class:ProductDetailsSignals
__init__	controller/loader_threads.py	/^    def __init__(self, connection, off_model):$/;"	m	class:UpdateCategories
__init__	controller/loader_threads.py	/^    def __init__(self, controller):$/;"	m	class:ThreadsController
__init__	controller/loader_threads.py	/^    def __init__(self, ctrl, model, mode=Mode.SELECTED_FOOD):$/;"	m	class:LoadProductDetails
__init__	controller/loader_threads.py	/^    def __init__(self, model):$/;"	m	class:LoadFoods
__init__	controller/loader_threads.py	/^    def __init__(self, model, connection):$/;"	m	class:LoadCategories
__init__	controller/mixin.py	/^    def __init__(self, **kargs):$/;"	m	class:MixinControllers
__init__	model/database.py	/^    def __init__(self):$/;"	m	class:AdminConnection
__init__	model/database.py	/^    def __init__(self):$/;"	m	class:DatabaseConnection
__init__	model/helpers/categories.py	/^    def __init__(self, user):$/;"	m	class:CategoriesHelper
__init__	model/helpers/foods.py	/^    def __init__(self, user):$/;"	m	class:FoodsHelper
__init__	model/helpers/mixin.py	/^    def __init__(self, user):$/;"	m	class:MixinHelpers
__init__	model/helpers/substitutes.py	/^    def __init__(self, user):$/;"	m	class:SubstitutesHelper
__init__	model/mixin.py	/^    def __init__(self, **kargs):$/;"	m	class:MixinModels
__init__	model/modes.py	/^    def __init__(self, **kargs):$/;"	m	class:LocalDatabase
__init__	model/modes.py	/^    def __init__(self, **kargs):$/;"	m	class:OpenFoodFacts
__init__	model/user.py	/^    def __init__(self, connection):$/;"	m	class:User
__init__	model/views/categories.py	/^    def __init__(self, **kargs):$/;"	m	class:CategoriesModel
__init__	model/views/foods.py	/^    def __init__(self, **kargs):$/;"	m	class:FoodsModel
__init__	model/views/mixin.py	/^    def __init__(self, **kargs):$/;"	m	class:MixinModelsView
__init__	model/views/product_details.py	/^    def __init__(self, views):$/;"	m	class:ProductDetailsModels
__init__	model/views/substitutes.py	/^    def __init__(self, **kargs):$/;"	m	class:SubstitutesModel
__init__	view/mainwindow.py	/^    def __init__(self):$/;"	m	class:MainWindow
__init__	view/messenger.py	/^    def __init__(self, controller, flags):$/;"	m	class:Messenger
__init__	view/mixin.py	/^    def __init__(self, **kargs):$/;"	m	class:MixinSigns
__init__	view/sign_in.py	/^    def __init__(self, **kargs):$/;"	m	class:SignIn
__init__	view/sign_up.py	/^    def __init__(self, **kargs):$/;"	m	class:SignUp
_delete_substitute	model/database.py	/^    def _delete_substitute(self, user_id, food_code, food_substitute):$/;"	m	class:UserConnection
_normalize_product_details	model/database.py	/^    def _normalize_product_details(product):$/;"	m	class:UserConnection
_record_product	model/database.py	/^    def _record_product(self, user_id, category_id, food_code, details):$/;"	m	class:UserConnection
_refresh_views	controller/control.py	/^    def _refresh_views(self):$/;"	m	class:Controller
ask_request	model/database.py	/^    def ask_request(self, request, values=None):$/;"	m	class:DatabaseConnection
authenticate	controller/control.py	/^    def authenticate(self):$/;"	m	class:Controller
caller	controller/loader_threads.py	/^    def caller(self):$/;"	m	class:LoadProductDetails
caller	controller/loader_threads.py	/^    def caller(self, model):$/;"	m	class:LoadProductDetails
can_connect	model/database.py	/^    def can_connect(username, password):$/;"	m	class:AdminConnection
categories	model/mixin.py	/^    def categories(self):$/;"	m	class:MixinModels
category	controller/loader_threads.py	/^    def category(self):$/;"	m	class:LoadFoods
category	controller/loader_threads.py	/^    def category(self, value):$/;"	m	class:LoadFoods
category_id	model/views/foods.py	/^    def category_id(self):$/;"	m	class:FoodsModel
category_id	model/views/foods.py	/^    def category_id(self, value):$/;"	m	class:FoodsModel
checked	model/views/product_details.py	/^    def checked(self):$/;"	m	class:ProductDetailsModels
checked	model/views/product_details.py	/^    def checked(self, dct):$/;"	m	class:ProductDetailsModels
checked	model/views/substitutes.py	/^    def checked(self):$/;"	m	class:SubstitutesModel
checked_start	controller/mixin.py	/^    checked_start = pyqtSignal()$/;"	v	class:MixinControllers
checked_substitutes	controller/control.py	/^    def checked_substitutes(self):$/;"	m	class:Controller
clicked	assets/objects/qlabel_clickable.py	/^    clicked = pyqtSignal()$/;"	v	class:QLabelClickable
connect	controller/mixin.py	/^    def connect(self):$/;"	m	class:MixinControllers
connect	model/database.py	/^    def connect(self, user, password, database):$/;"	m	class:DatabaseConnection
connect	model/user.py	/^    def connect(self, username, password, family=None, nick=None):$/;"	m	class:User
connect_signals	controller/authentication.py	/^    def connect_signals(self):$/;"	m	class:Authentication
connect_signals	controller/control.py	/^    def connect_signals(self):$/;"	m	class:Controller
connect_to_off_db	model/database.py	/^    def connect_to_off_db(self, admin=False):$/;"	m	class:DatabaseConnection
connect_user	controller/authentication.py	/^    def connect_user(self):$/;"	m	class:Authentication
connection	controller/mixin.py	/^    def connection(self):$/;"	m	class:MixinControllers
connection	model/helpers/foods.py	/^    def connection(self):$/;"	m	class:FoodsHelper
connection	model/helpers/foods.py	/^    def connection(self, db):$/;"	m	class:FoodsHelper
connection	model/mixin.py	/^    def connection(self):$/;"	m	class:MixinModels
connection	model/mixin.py	/^    def connection(self, new_connection):$/;"	m	class:MixinModels
connection	model/user.py	/^    def connection(self):$/;"	m	class:User
connection	model/user.py	/^    def connection(self, connection):$/;"	m	class:User
count	controller/loader_threads.py	/^    count = 0$/;"	v	class:LoadProductDetails
count	model/views/foods.py	/^    def count(self):$/;"	m	class:FoodsModel
count	model/views/foods.py	/^    def count(self, value):$/;"	m	class:FoodsModel
create_user	model/database.py	/^    def create_user(self, username, password):$/;"	m	class:AdminConnection
db_categories_status	model/database.py	/^        def db_categories_status(off_cat, cat):$/;"	f	member:AdminConnection.update_categories	file:
define_user	controller/authentication.py	/^    def define_user(self, type):$/;"	m	class:Authentication
define_with	model/views/product_details.py	/^    def define_with(var, food):$/;"	m	class:ProductDetailsModels
del_record	model/database.py	/^    def del_record(self, selected, substitutes, user_id):$/;"	m	class:UserConnection
disconnect	controller/mixin.py	/^    def disconnect(self):$/;"	m	class:MixinControllers
disconnect	model/database.py	/^    def disconnect(self):$/;"	m	class:DatabaseConnection
disconnect	model/user.py	/^    def disconnect(self):$/;"	m	class:User
disconnect_user	controller/authentication.py	/^    def disconnect_user(self):$/;"	m	class:Authentication
download_categories	model/modes.py	/^    def download_categories(self):$/;"	m	class:OpenFoodFacts
download_foods	model/modes.py	/^    def download_foods(self, category, page=1):$/;"	m	class:OpenFoodFacts
download_product	model/modes.py	/^    def download_product(self, code, name):$/;"	m	class:OpenFoodFacts
end_process	controller/loader_threads.py	/^    def end_process(self):$/;"	m	class:LoadFoods
error_signal	controller/loader_threads.py	/^    error_signal = pyqtSignal(str)$/;"	v	class:ProductDetailsSignals
exist_username	model/database.py	/^    def exist_username(self, username):$/;"	m	class:AdminConnection
family	model/user.py	/^    def family(self):$/;"	m	class:User
find_categories_in_database	model/views/categories.py	/^    def find_categories_in_database(self):$/;"	m	class:CategoriesModel
find_foods_in_database	model/views/foods.py	/^    def find_foods_in_database(self):$/;"	m	class:FoodsModel
find_substitutes_in_database	model/views/substitutes.py	/^    def find_substitutes_in_database(self, selected_category):$/;"	m	class:SubstitutesModel
finished	controller/loader_threads.py	/^    finished = pyqtSignal(Mode, str, dict)$/;"	v	class:ProductDetailsSignals
flags	controller/mixin.py	/^    def flags(self):$/;"	m	class:MixinControllers
foods	model/mixin.py	/^    def foods(self):$/;"	m	class:MixinModels
generate_database	model/database.py	/^    def generate_database(self):$/;"	m	class:AdminConnection
generate_users_role	model/database.py	/^    def generate_users_role(self):$/;"	m	class:AdminConnection
get_a_page	controller/loader_threads.py	/^    get_a_page = pyqtSignal(int, int)$/;"	v	class:LoadFoods
get_bg_color	view/mainwindow.py	/^    def get_bg_color(self):$/;"	m	class:MainWindow
get_categories	model/modes.py	/^    def get_categories(self):$/;"	m	class:LocalDatabase
get_foods	model/modes.py	/^    def get_foods(self, category):$/;"	m	class:LocalDatabase
get_product_details	model/modes.py	/^    def get_product_details(self, code):$/;"	m	class:LocalDatabase
get_substitutes	model/modes.py	/^    def get_substitutes(self, code):$/;"	m	class:LocalDatabase
helper	model/views/mixin.py	/^    def helper(self):$/;"	m	class:MixinModelsView
id	model/user.py	/^    def id(self):$/;"	m	class:User
index	controller/loader_threads.py	/^    def index(self):$/;"	m	class:LoadProductDetails
index	controller/loader_threads.py	/^    def index(self, idx):$/;"	m	class:LoadProductDetails
init_foods_thread	controller/loader_threads.py	/^    def init_foods_thread(self, category):$/;"	m	class:ThreadsController
init_product_details_thread	controller/loader_threads.py	/^    def init_product_details_thread(self, model_caller, index, mode):$/;"	m	class:ThreadsController
initialize	controller/control_mode.py	/^    def initialize(self):$/;"	m	class:DatabaseMode
initialize	controller/control_mode.py	/^    def initialize(self):$/;"	m	class:OpenFoodFactsMode
initialize_database	controller/authentication.py	/^    def initialize_database(self):$/;"	m	class:Authentication
internet_access	model/mixin.py	/^    internet_access = pyqtSignal(bool)$/;"	v	class:MixinModels
is_admin	model/user.py	/^    def is_admin(self):$/;"	m	class:User
is_connected	model/database.py	/^    def is_connected(self):$/;"	m	class:DatabaseConnection
is_connected	model/user.py	/^    def is_connected(self):$/;"	m	class:User
is_in_database	model/views/substitutes.py	/^    def is_in_database(self, category_id, code):$/;"	m	class:SubstitutesModel
kill_details_threads	controller/loader_threads.py	/^    kill_details_threads= pyqtSignal(Mode)$/;"	v	class:ThreadsController
kill_foods_thread	controller/control_mode.py	/^    kill_foods_thread = pyqtSignal()$/;"	v	class:OpenFoodFactsMode
load_categories	controller/control_mode.py	/^    def load_categories(self):$/;"	m	class:OpenFoodFactsMode
messenger	controller/mixin.py	/^    def messenger(self):$/;"	m	class:MixinControllers
model	controller/mixin.py	/^    def model(self):$/;"	m	class:MixinControllers
models	model/views/product_details.py	/^    def models(self):$/;"	m	class:ProductDetailsModels
mousePressEvent	assets/objects/qlabel_clickable.py	/^    def mousePressEvent(self, ev):$/;"	m	class:QLabelClickable
new_record	model/database.py	/^    def new_record(self, category_id, selected, substitutes, user_id):$/;"	m	class:UserConnection
new_user	controller/authentication.py	/^    def new_user(self):$/;"	m	class:Authentication
nick	model/user.py	/^    def nick(self):$/;"	m	class:User
no_product_found	controller/loader_threads.py	/^    no_product_found = pyqtSignal()$/;"	v	class:LoadFoods
normalize	model/modes.py	/^        def normalize(product):$/;"	f	member:OpenFoodFacts.download_product	file:
normalize_foods_products	model/modes.py	/^        def normalize_foods_products(foods_products):$/;"	f	member:OpenFoodFacts.download_foods	file:
on_category_selected	controller/control_mode.py	/^    def on_category_selected(self, index):$/;"	m	class:DatabaseMode
on_category_selected	controller/control_mode.py	/^    def on_category_selected(self, index):$/;"	m	class:OpenFoodFactsMode
on_category_selected	view/messenger.py	/^    def on_category_selected(self, index):$/;"	m	class:Messenger
on_checked_started	controller/control.py	/^    def on_checked_started(self):$/;"	m	class:Controller
on_close	controller/authentication.py	/^    def on_close(self):$/;"	m	class:Authentication
on_error_message	view/mainwindow.py	/^    def on_error_message(self, message):$/;"	m	class:MainWindow
on_food_selected	controller/control_mode.py	/^    def on_food_selected(self, index):$/;"	m	class:DatabaseMode
on_food_selected	controller/control_mode.py	/^    def on_food_selected(self, index):$/;"	m	class:OpenFoodFactsMode
on_food_selected	view/messenger.py	/^    def on_food_selected(self, index):$/;"	m	class:Messenger
on_internet_access	controller/control_mode.py	/^    def on_internet_access(self, status):$/;"	m	class:OpenFoodFactsMode
on_internet_access	view/messenger.py	/^    def on_internet_access(self, status):$/;"	m	class:Messenger
on_load_categories_finished	controller/control_mode.py	/^    def on_load_categories_finished(self):$/;"	m	class:OpenFoodFactsMode
on_load_categories_finished	view/messenger.py	/^    def on_load_categories_finished(self):$/;"	m	class:Messenger
on_load_details_checked_finished	controller/control.py	/^    def on_load_details_checked_finished(self):$/;"	m	class:Controller
on_load_foods_finished	controller/control_mode.py	/^    def on_load_foods_finished(self):$/;"	m	class:OpenFoodFactsMode
on_load_foods_finished	view/messenger.py	/^    def on_load_foods_finished(self):$/;"	m	class:Messenger
on_load_product_details_finished	controller/mixin.py	/^    def on_load_product_details_finished(self, mode, code, details):$/;"	m	class:MixinControllers
on_load_product_details_finished	view/messenger.py	/^    def on_load_product_details_finished(self, mode):$/;"	m	class:Messenger
on_local_mode	controller/control.py	/^    def on_local_mode(self, state):$/;"	m	class:Controller
on_new_food_page	controller/control_mode.py	/^    def on_new_food_page(self, page, total):$/;"	m	class:OpenFoodFactsMode
on_new_food_page	view/messenger.py	/^    def on_new_food_page(self, page, total):$/;"	m	class:Messenger
on_new_status_connection	controller/authentication.py	/^    def on_new_status_connection(self, connected, status):$/;"	m	class:Authentication
on_new_status_connection	controller/control.py	/^    def on_new_status_connection(self, connected):$/;"	m	class:Controller
on_no_product_found	controller/control_mode.py	/^    def on_no_product_found(self):$/;"	m	class:OpenFoodFactsMode
on_no_product_found	view/messenger.py	/^    def on_no_product_found(self):$/;"	m	class:Messenger
on_openfoodfacts_mode	controller/control.py	/^    def on_openfoodfacts_mode(self, state):$/;"	m	class:Controller
on_product_url_clicked	controller/mixin.py	/^    def on_product_url_clicked(self):$/;"	m	class:MixinControllers
on_quit	controller/control.py	/^    def on_quit(self):$/;"	m	class:Controller
on_record_substitutes	controller/control.py	/^    def on_record_substitutes(self):$/;"	m	class:Controller
on_remove_substitutes	controller/control.py	/^    def on_remove_substitutes(self):$/;"	m	class:Controller
on_reset_status	view/mixin.py	/^    def on_reset_status(self):$/;"	m	class:MixinSigns
on_reset_status	view/sign_in.py	/^    def on_reset_status(self):$/;"	m	class:SignIn
on_sign_in	controller/authentication.py	/^    def on_sign_in(self):$/;"	m	class:Authentication
on_sign_in	controller/control.py	/^    def on_sign_in(self):$/;"	m	class:Controller
on_sign_up	controller/authentication.py	/^    def on_sign_up(self):$/;"	m	class:Authentication
on_status	view/mixin.py	/^    def on_status(self, message):$/;"	m	class:MixinSigns
on_status	view/sign_in.py	/^    def on_status(self, message):$/;"	m	class:SignIn
on_status	view/sign_up.py	/^    def on_status(self, message):$/;"	m	class:SignUp
on_status_message	view/mainwindow.py	/^    def on_status_message(self, message):$/;"	m	class:MainWindow
on_substitute_checked	controller/control_mode.py	/^    def on_substitute_checked(self, item):$/;"	m	class:DatabaseMode
on_substitute_checked	controller/control_mode.py	/^    def on_substitute_checked(self, item):$/;"	m	class:OpenFoodFactsMode
on_substitute_checked	view/messenger.py	/^    def on_substitute_checked(self, item):$/;"	m	class:Messenger
on_substitute_selection_changed	controller/control_mode.py	/^    def on_substitute_selection_changed(self, selected, deselected):$/;"	m	class:DatabaseMode
on_substitute_selection_changed	controller/control_mode.py	/^    def on_substitute_selection_changed(self, selected, deselected):$/;"	m	class:OpenFoodFactsMode
on_substitute_selection_changed	view/messenger.py	/^    def on_substitute_selection_changed(self, selected, deselected):$/;"	m	class:Messenger
on_user_event	model/mixin.py	/^    def on_user_event(self, user):$/;"	m	class:MixinModels
on_username_changed	controller/authentication.py	/^    def on_username_changed(self, username):$/;"	m	class:Authentication
populate	model/views/categories.py	/^    def populate(self, categories):$/;"	m	class:CategoriesModel
populate	model/views/foods.py	/^    def populate(self, foods, new=True):$/;"	m	class:FoodsModel
populate	model/views/product_details.py	/^    def populate(self, food):$/;"	m	class:ProductDetailsModels
populate	model/views/substitutes.py	/^    def populate(self, foods, substitutes, page=0, new=True):$/;"	m	class:SubstitutesModel
product_details	model/mixin.py	/^    def product_details(self):$/;"	m	class:MixinModels
qCleanupResources	ui/images_rc.py	/^def qCleanupResources():$/;"	f
qInitResources	ui/images_rc.py	/^def qInitResources():$/;"	f
qt_resource_data	ui/images_rc.py	/^qt_resource_data = b"\\$/;"	v
qt_resource_name	ui/images_rc.py	/^qt_resource_name = b"\\$/;"	v
qt_resource_struct	ui/images_rc.py	/^    qt_resource_struct = qt_resource_struct_v1$/;"	v
qt_resource_struct	ui/images_rc.py	/^    qt_resource_struct = qt_resource_struct_v2$/;"	v
qt_resource_struct_v1	ui/images_rc.py	/^qt_resource_struct_v1 = b"\\$/;"	v
qt_resource_struct_v2	ui/images_rc.py	/^qt_resource_struct_v2 = b"\\$/;"	v
qt_version	ui/images_rc.py	/^qt_version = [int(v) for v in QtCore.qVersion().split('.')]$/;"	v
rcc_version	ui/images_rc.py	/^    rcc_version = 1$/;"	v
record_user	model/database.py	/^    def record_user(self, username, nick_name, family_name):$/;"	m	class:AdminConnection
recorded	model/views/foods.py	/^    def recorded(self):$/;"	m	class:FoodsModel
recorded	model/views/foods.py	/^    def recorded(self, value):$/;"	m	class:FoodsModel
records_concerned	model/helpers/categories.py	/^    def records_concerned(self):$/;"	m	class:CategoriesHelper
records_concerned	model/helpers/foods.py	/^    def records_concerned(self, category_id):$/;"	m	class:FoodsHelper
records_concerned	model/helpers/substitutes.py	/^    def records_concerned(self, category_id):$/;"	m	class:SubstitutesHelper
refresh_views_colors	model/mixin.py	/^    def refresh_views_colors(self):$/;"	m	class:MixinModels
reset	model/views/categories.py	/^    def reset(self):$/;"	m	class:CategoriesModel
reset	model/views/foods.py	/^    def reset(self):$/;"	m	class:FoodsModel
reset	model/views/product_details.py	/^    def reset(self):$/;"	m	class:ProductDetailsModels
reset	model/views/substitutes.py	/^    def reset(self):$/;"	m	class:SubstitutesModel
reset	view/sign_in.py	/^    def reset(self):$/;"	m	class:SignIn
reset	view/sign_up.py	/^    def reset(self):$/;"	m	class:SignUp
reset_checkboxes	model/views/substitutes.py	/^    def reset_checkboxes(self):$/;"	m	class:SubstitutesModel
reset_models	model/mixin.py	/^    def reset_models(self, models=(Widget.ALL,)):$/;"	m	class:MixinModels
reset_views	view/mainwindow.py	/^    def reset_views(self, views=(Widget.ALL,)):$/;"	m	class:MainWindow
retranslateUi	ui/ui_mainwindow.py	/^    def retranslateUi(self, MainWindow):$/;"	m	class:Ui_MainWindow
retranslateUi	ui/ui_sign_in.py	/^    def retranslateUi(self, SignIn):$/;"	m	class:Ui_SignIn
retranslateUi	ui/ui_sign_up.py	/^    def retranslateUi(self, SignUp):$/;"	m	class:Ui_SignUp
run	controller/loader_threads.py	/^    def run(self):$/;"	m	class:LoadCategories
run	controller/loader_threads.py	/^    def run(self):$/;"	m	class:LoadFoods
run	controller/loader_threads.py	/^    def run(self):$/;"	m	class:LoadProductDetails
run	controller/loader_threads.py	/^    def run(self):$/;"	m	class:UpdateCategories
selected	model/views/foods.py	/^    def selected(self):$/;"	m	class:FoodsModel
selected	model/views/foods.py	/^    def selected(self, value):$/;"	m	class:FoodsModel
selected_details	model/views/foods.py	/^    def selected_details(self):$/;"	m	class:FoodsModel
selected_details	model/views/foods.py	/^    def selected_details(self, details):$/;"	m	class:FoodsModel
send_request	model/database.py	/^    def send_request(self, request, values=None, many=None):$/;"	m	class:DatabaseConnection
set_exist_username	view/sign_up.py	/^    def set_exist_username(self, **kargs):$/;"	m	class:SignUp
setupUi	ui/ui_mainwindow.py	/^    def setupUi(self, MainWindow):$/;"	m	class:Ui_MainWindow
setupUi	ui/ui_sign_in.py	/^    def setupUi(self, SignIn):$/;"	m	class:Ui_SignIn
setupUi	ui/ui_sign_up.py	/^    def setupUi(self, SignUp):$/;"	m	class:Ui_SignUp
show_categories	view/mainwindow.py	/^    def show_categories(self, model):$/;"	m	class:MainWindow
show_foods	view/mainwindow.py	/^    def show_foods(self, model):$/;"	m	class:MainWindow
show_product_details	view/mainwindow.py	/^    def show_product_details(self, models):$/;"	m	class:MainWindow
show_substitutes	controller/control_mode.py	/^    def show_substitutes(self):$/;"	m	class:OpenFoodFactsMode
show_substitutes	view/mainwindow.py	/^    def show_substitutes(self, model):$/;"	m	class:MainWindow
signals	controller/loader_threads.py	/^    def signals(self):$/;"	m	class:LoadProductDetails
status_connection	model/user.py	/^    status_connection = pyqtSignal(bool, str)$/;"	v	class:User
status_message	controller/authentication.py	/^    status_message = pyqtSignal(str)$/;"	v	class:Authentication
status_message	controller/control.py	/^    status_message = pyqtSignal(str)$/;"	v	class:Controller
status_message	controller/loader_threads.py	/^    status_message = pyqtSignal(str)$/;"	v	class:ProductDetailsSignals
status_message	controller/mixin.py	/^    status_message = pyqtSignal(str)$/;"	v	class:MixinControllers
status_message	model/database.py	/^    status_message = pyqtSignal(str)$/;"	v	class:DatabaseConnection
status_message	view/messenger.py	/^    status_message = pyqtSignal(str)$/;"	v	class:Messenger
status_user_connection	controller/authentication.py	/^    status_user_connection = pyqtSignal(TypeConnection)$/;"	v	class:Authentication
substitutes	model/mixin.py	/^    def substitutes(self):$/;"	m	class:MixinModels
threads	controller/control_mode.py	/^    def threads(self):$/;"	m	class:OpenFoodFactsMode
trash_dirty_product	model/views/mixin.py	/^    def trash_dirty_product(product):$/;"	m	class:MixinModelsView
update_categories	model/database.py	/^    def update_categories(self, off_categories):$/;"	m	class:AdminConnection
update_checked	model/views/product_details.py	/^    def update_checked(self, details, add=True):$/;"	m	class:ProductDetailsModels
update_checked	model/views/substitutes.py	/^    def update_checked(self, item, code):$/;"	m	class:SubstitutesModel
user	controller/authentication.py	/^    def user(self):$/;"	m	class:Authentication
user	controller/authentication.py	/^    def user(self, usr):$/;"	m	class:Authentication
user	model/helpers/mixin.py	/^    def user(self):$/;"	m	class:MixinHelpers
user	model/helpers/mixin.py	/^    def user(self, usr):$/;"	m	class:MixinHelpers
user	model/views/mixin.py	/^    def user(self):$/;"	m	class:MixinModelsView
user	model/views/mixin.py	/^    def user(self, usr):$/;"	m	class:MixinModelsView
user_connection	controller/authentication.py	/^    def user_connection(self):$/;"	m	class:Authentication
user_create	view/sign_up.py	/^    def user_create(self):$/;"	m	class:SignUp
user_create	view/sign_up.py	/^    def user_create(self, value):$/;"	m	class:SignUp
user_event	controller/control.py	/^    user_event = pyqtSignal(User)$/;"	v	class:Controller
username	model/user.py	/^    def username(self):$/;"	m	class:User
views	controller/control.py	/^    def views(self):$/;"	m	class:Controller
views	controller/mixin.py	/^    def views(self):$/;"	m	class:MixinControllers
wash_foods_thread	controller/loader_threads.py	/^    def wash_foods_thread(self):$/;"	m	class:ThreadsController
wash_product_details_thread	controller/loader_threads.py	/^    def wash_product_details_thread(self, mode):$/;"	m	class:ThreadsController
window	controller/control.py	/^    def window(self):$/;"	m	class:Controller
window	controller/mixin.py	/^    def window(self):$/;"	m	class:MixinControllers
